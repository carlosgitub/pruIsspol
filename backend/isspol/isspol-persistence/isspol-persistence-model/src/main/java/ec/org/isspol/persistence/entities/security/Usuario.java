package ec.org.isspol.persistence.entities.security;
// Generated 21-abr-2017 12:20:59 by Hibernate Tools 4.0.1.Final

import ec.org.isspol.persistence.entities.persona.PersonaTipoSubtipo;

import java.util.*;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name = "usuario", schema = "seguridad", catalog = "siisspolweb", uniqueConstraints = @UniqueConstraint(columnNames = "usuario_secuencial"))
public class Usuario implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

	private String idUsuario;
	private EstructuraOrganizacional estructuraOrganizacional;
	private Usuario usuario;
	private PersonaTipoSubtipo personaTipoSubtipo;
	private Horario horario;
	private EstadoUsuario estadoUsuario;
	private String email;
	private byte[] clave;
	private Date fechaUltimoCambioPwd;
	private Boolean cambiarPwdProximoLogon;
	private Boolean noPuedeCambiarPwd;
	private Boolean pwdNuncaExpira;
	private Boolean bloqueada;
	private Integer usuarioSecuencial;
	private String identificacion;
	private Boolean cualquierEstacion;
	private Integer tiempoInactividad;
	private Integer idDashboardInicio;
	private Integer intentoFallido;
	private Date fechaFallido;
	private byte[] foto;
	private Boolean eliminado;
	private String creacionUsuario;
	private Date creacionFecha;
	private String creacionEquipo;
	private String modificaUsuario;
	private Date modificaFecha;
	private String modificaEquipo;

	private Collection<UsuarioOficina> listaUsuarioOficinas = new ArrayList<>();

	private Set<EstacionUsuario> estacionUsuarios = new HashSet<EstacionUsuario>(0);
	private Set<GrupoUsuario> grupoUsuarios = new HashSet<GrupoUsuario>(0);
	private Set<Favorito> favoritos = new HashSet<Favorito>(0);
	private Set<UsuarioCambio> usuarioCambios = new HashSet<UsuarioCambio>(0);
	private Set<HistClave> histClaves = new HashSet<HistClave>(0);
	private Set<Oficina> oficinas = new HashSet<Oficina>(0);
	private Set<OpcionUso> opcionUsos = new HashSet<OpcionUso>(0);
	private Set<Permiso> permisos = new HashSet<Permiso>(0);
	private Set<UsuarioUbicacionGeografica> usuarioUbicacionGeograficas = new HashSet<UsuarioUbicacionGeografica>(0);
	private Set<Usuario> usuarios = new HashSet<Usuario>(0);
	private Set<Token> tokens = new HashSet<Token>(0);

	public Usuario() {
	}


	@Id
	@Column(name = "id_usuario", unique = true, nullable = false, length = 20)
	public String getIdUsuario() {
		return this.idUsuario;
	}

	public void setIdUsuario(String idUsuario) {
		this.idUsuario = idUsuario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_estructura_organizacional")
	public EstructuraOrganizacional getEstructuraOrganizacional() {
		return this.estructuraOrganizacional;
	}

	public void setEstructuraOrganizacional(EstructuraOrganizacional estructuraOrganizacional) {
		this.estructuraOrganizacional = estructuraOrganizacional;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_usuario_padre")
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_persona_tipo_subtipo", nullable = false)
	public PersonaTipoSubtipo getPersonaTipoSubtipo() {
		return personaTipoSubtipo;
	}

	public void setPersonaTipoSubtipo(PersonaTipoSubtipo personaTipoSubtipo) {
		this.personaTipoSubtipo = personaTipoSubtipo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_horario", nullable = false)
	public Horario getHorario() {
		return this.horario;
	}

	public void setHorario(Horario horario) {
		this.horario = horario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_estado_usuario", nullable = false)
	public EstadoUsuario getEstadoUsuario() {
		return this.estadoUsuario;
	}

	public void setEstadoUsuario(EstadoUsuario estadoUsuario) {
		this.estadoUsuario = estadoUsuario;
	}

	@Column(name = "email", length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "clave")
	public byte[] getClave() {
		return this.clave;
	}

	public void setClave(byte[] clave) {
		this.clave = clave;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_ultimo_cambio_pwd", length = 23)
	public Date getFechaUltimoCambioPwd() {
		return this.fechaUltimoCambioPwd;
	}

	public void setFechaUltimoCambioPwd(Date fechaUltimoCambioPwd) {
		this.fechaUltimoCambioPwd = fechaUltimoCambioPwd;
	}

	@Column(name = "cambiar_pwd_proximo_logon", nullable = false)
	public Boolean getCambiarPwdProximoLogon() {
		return this.cambiarPwdProximoLogon;
	}

	public void setCambiarPwdProximoLogon(Boolean cambiarPwdProximoLogon) {
		this.cambiarPwdProximoLogon = cambiarPwdProximoLogon;
	}

	@Column(name = "no_puede_cambiar_pwd", nullable = false)
	public Boolean getNoPuedeCambiarPwd() {
		return this.noPuedeCambiarPwd;
	}

	public void setNoPuedeCambiarPwd(Boolean noPuedeCambiarPwd) {
		this.noPuedeCambiarPwd = noPuedeCambiarPwd;
	}

	@Column(name = "pwd_nunca_expira", nullable = false)
	public Boolean getPwdNuncaExpira() {
		return this.pwdNuncaExpira;
	}

	public void setPwdNuncaExpira(Boolean pwdNuncaExpira) {
		this.pwdNuncaExpira = pwdNuncaExpira;
	}

	@Column(name = "bloqueada", nullable = false)
	public Boolean getBloqueada() {
		return this.bloqueada;
	}

	public void setBloqueada(Boolean bloqueada) {
		this.bloqueada = bloqueada;
	}

	@Column(name = "usuario_secuencial", unique = true, nullable = false)
	public Integer getUsuarioSecuencial() {
		return this.usuarioSecuencial;
	}

	public void setUsuarioSecuencial(Integer usuarioSecuencial) {
		this.usuarioSecuencial = usuarioSecuencial;
	}

	@Column(name = "identificacion", length = 15)
	public String getIdentificacion() {
		return this.identificacion;
	}

	public void setIdentificacion(String identificacion) {
		this.identificacion = identificacion;
	}

	@Column(name = "cualquier_estacion", nullable = false)
	public Boolean getCualquierEstacion() {
		return this.cualquierEstacion;
	}

	public void setCualquierEstacion(Boolean cualquierEstacion) {
		this.cualquierEstacion = cualquierEstacion;
	}

	@Column(name = "tiempo_inactividad", nullable = false)
	public Integer getTiempoInactividad() {
		return this.tiempoInactividad;
	}

	public void setTiempoInactividad(Integer tiempoInactividad) {
		this.tiempoInactividad = tiempoInactividad;
	}

	@Column(name = "id_dashboard_inicio", nullable = false)
	public Integer getIdDashboardInicio() {
		return this.idDashboardInicio;
	}

	public void setIdDashboardInicio(Integer idDashboardInicio) {
		this.idDashboardInicio = idDashboardInicio;
	}

	@Column(name = "foto")
	public byte[] getFoto() {
		return this.foto;
	}

	public void setFoto(byte[] foto) {
		this.foto = foto;
	}

	@Column(name = "eliminado", nullable = false)
	public Boolean getEliminado() {
		return this.eliminado;
	}

	public void setEliminado(Boolean eliminado) {
		this.eliminado = eliminado;
	}

    @Column(name = "intento_fallido")
    public Integer getIntentoFallido() {
        return intentoFallido;
    }

    public void setIntentoFallido(Integer intentoFallido) {
        this.intentoFallido = intentoFallido;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fecha_fallido", nullable = false, length = 23)
    public Date getFechaFallido() {
        return fechaFallido;
    }

    public void setFechaFallido(Date fechaFallido) {
        this.fechaFallido = fechaFallido;
    }

    @Column(name = "creacion_usuario", nullable = false, length = 20)
	public String getCreacionUsuario() {
		return this.creacionUsuario;
	}

	public void setCreacionUsuario(String creacionUsuario) {
		this.creacionUsuario = creacionUsuario;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creacion_fecha", nullable = false, length = 23)
	public Date getCreacionFecha() {
		return this.creacionFecha;
	}

	public void setCreacionFecha(Date creacionFecha) {
		this.creacionFecha = creacionFecha;
	}

	@Column(name = "creacion_equipo", nullable = false, length = 20)
	public String getCreacionEquipo() {
		return this.creacionEquipo;
	}

	public void setCreacionEquipo(String creacionEquipo) {
		this.creacionEquipo = creacionEquipo;
	}

	@Column(name = "modifica_usuario", nullable = false, length = 20)
	public String getModificaUsuario() {
		return this.modificaUsuario;
	}

	public void setModificaUsuario(String modificaUsuario) {
		this.modificaUsuario = modificaUsuario;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modifica_fecha", nullable = false, length = 23)
	public Date getModificaFecha() {
		return this.modificaFecha;
	}

	public void setModificaFecha(Date modificaFecha) {
		this.modificaFecha = modificaFecha;
	}

	@Column(name = "modifica_equipo", nullable = false, length = 20)
	public String getModificaEquipo() {
		return this.modificaEquipo;
	}

	public void setModificaEquipo(String modificaEquipo) {
		this.modificaEquipo = modificaEquipo;
	}


	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Collection<UsuarioOficina> getListaUsuarioOficinas() {
		return listaUsuarioOficinas;
	}

	public void setListaUsuarioOficinas(Collection<UsuarioOficina> listaUsuarioOficinas) {
		this.listaUsuarioOficinas = listaUsuarioOficinas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<EstacionUsuario> getEstacionUsuarios() {
		return this.estacionUsuarios;
	}

	public void setEstacionUsuarios(Set<EstacionUsuario> estacionUsuarios) {
		this.estacionUsuarios = estacionUsuarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<GrupoUsuario> getGrupoUsuarios() {
		return this.grupoUsuarios;
	}

	public void setGrupoUsuarios(Set<GrupoUsuario> grupoUsuarios) {
		this.grupoUsuarios = grupoUsuarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Favorito> getFavoritos() {
		return this.favoritos;
	}

	public void setFavoritos(Set<Favorito> favoritos) {
		this.favoritos = favoritos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<UsuarioCambio> getUsuarioCambios() {
		return this.usuarioCambios;
	}

	public void setUsuarioCambios(Set<UsuarioCambio> usuarioCambios) {
		this.usuarioCambios = usuarioCambios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<HistClave> getHistClaves() {
		return this.histClaves;
	}

	public void setHistClaves(Set<HistClave> histClaves) {
		this.histClaves = histClaves;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Oficina> getOficinas() {
		return this.oficinas;
	}

	public void setOficinas(Set<Oficina> oficinas) {
		this.oficinas = oficinas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<OpcionUso> getOpcionUsos() {
		return this.opcionUsos;
	}

	public void setOpcionUsos(Set<OpcionUso> opcionUsos) {
		this.opcionUsos = opcionUsos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Permiso> getPermisos() {
		return this.permisos;
	}

	public void setPermisos(Set<Permiso> permisos) {
		this.permisos = permisos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<UsuarioUbicacionGeografica> getUsuarioUbicacionGeograficas() {
		return this.usuarioUbicacionGeograficas;
	}

	public void setUsuarioUbicacionGeograficas(Set<UsuarioUbicacionGeografica> usuarioUbicacionGeograficas) {
		this.usuarioUbicacionGeograficas = usuarioUbicacionGeograficas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Usuario> getUsuarios() {
		return this.usuarios;
	}

	public void setUsuarios(Set<Usuario> usuarios) {
		this.usuarios = usuarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Token> getTokens() {
		return tokens;
	}

	public void setTokens(Set<Token> tokens) {
		this.tokens = tokens;
	}

}
