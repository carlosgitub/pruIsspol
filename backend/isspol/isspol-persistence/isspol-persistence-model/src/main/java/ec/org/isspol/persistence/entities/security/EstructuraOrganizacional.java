package ec.org.isspol.persistence.entities.security;

import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;

import javax.persistence.*;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

/**
 * EstructuraOrganizacional generated by hbm2java
 */
@Entity
@Table(name = "estructura_organizacional", schema = "seguridad", catalog = "siisspolweb")
public class EstructuraOrganizacional extends AuditEntity  implements Serializable {


	@Id
	@Column(name = "id_estructura_organizacional", unique = true, nullable = false)
	private Integer id;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_estructura_organizacional_padre")
	private EstructuraOrganizacional padreEstructuraOrganizacional;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_nivel_estructura_org", nullable = false)
	private NivelEstructuraOrg nivel;

	@Column(name = "codigo", nullable = false, length = 15)
	private String codigo;

	@Column(name = "codigo_alterno", length = 15)
	private String codigoAlterno;

	//Se cambio el nombre de los atributos por label, children, id, ya que
	//asi se puede utilizar la  directiva tree de angular
	@Column(name = "descripcion", nullable = false, length = 50)
	private String label;

	@Column(name = "orden", nullable = false)
	private Integer orden;

	@Column(name = "estado", nullable = false, length = 1)
	private Character estado;


	@LazyCollection(LazyCollectionOption.FALSE)
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "padreEstructuraOrganizacional", cascade = CascadeType.ALL)
	private List<EstructuraOrganizacional> children = new ArrayList<EstructuraOrganizacional>();

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "estructuraOrganizacional")
	private Collection<Usuario> lstUsuarios = new ArrayList<>();

	public EstructuraOrganizacional() {
	}

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public EstructuraOrganizacional getPadreEstructuraOrganizacional() {
		return padreEstructuraOrganizacional;
	}

	public void setPadreEstructuraOrganizacional(EstructuraOrganizacional padreEstructuraOrganizacional) {
		this.padreEstructuraOrganizacional = padreEstructuraOrganizacional;
	}

	public NivelEstructuraOrg getNivel() {
		return nivel;
	}

	public void setNivel(NivelEstructuraOrg nivel) {
		this.nivel = nivel;
	}

	public String getCodigo() {
		return codigo;
	}

	public void setCodigo(String codigo) {
		this.codigo = codigo;
	}

	public String getCodigoAlterno() {
		return codigoAlterno;
	}

	public void setCodigoAlterno(String codigoAlterno) {
		this.codigoAlterno = codigoAlterno;
	}

	public String getLabel() {
		return label;
	}

	public void setLabel(String label) {
		this.label = label;
	}

	public Integer getOrden() {
		return orden;
	}

	public void setOrden(Integer orden) {
		this.orden = orden;
	}

	public Character getEstado() {
		return estado;
	}

	public void setEstado(Character estado) {
		this.estado = estado;
	}

	public List<EstructuraOrganizacional> getChildren() {
		return children;
	}

	public void setChildren(List<EstructuraOrganizacional> children) {
		this.children = children;
	}

	public Collection<Usuario> getLstUsuarios() {
		return lstUsuarios;
	}

	public void setLstUsuarios(Collection<Usuario> lstUsuarios) {
		this.lstUsuarios = lstUsuarios;
	}



}
